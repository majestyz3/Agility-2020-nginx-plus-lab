proxy_cache_path /tmp/cache keys_zone=labCache:10m inactive=60m;

upstream f5App { 
    least_conn;
    zone f5App 64k;
    server docker.nginx-udf.internal:8080;  
    server docker.nginx-udf.internal:8081;  
    server docker.nginx-udf.internal:8082;
}

upstream nginxApp { 
    least_conn;
    zone nginxApp 64k;
    server docker.nginx-udf.internal:8083;  
    server docker.nginx-udf.internal:8084;  
    server docker.nginx-udf.internal:8085;
}

match f5_ok {
    status 200;
}

match nginx_ok {
    status 200-399;
    body !~ "maintenance mode";
}

map $request_method $purge_method {
    PURGE 1;
    default 0;
}

server {
    listen 80;
    server_name labapp.nginx-udf.internal;
    root /usr/share/nginx/html;
    error_log /var/log/nginx/LabApp.error.log info;  
    access_log /var/log/nginx/LabApp.access.log combined;
    status_zone default;

    location /f5/ {
        proxy_pass http://f5App/;
        health_check match=f5_ok;
        
        proxy_cache labCache;
        proxy_cache_purge $purge_method;
        proxy_ignore_headers Cache-Control;
        proxy_cache_valid any 30m;
    }
    location /nginx/ {
        proxy_pass http://nginxApp/;
        health_check match=nginx_ok;
    }
}
EOF



sudo bash -c 'cat > /etc/nginx/conf.d/app.conf' <<EOF
resolver docker.nginx-udf.internal:8600 valid=2s;
resolver_timeout 2s;

upstream sd_demo {
    zone upstream_sd_demo 64k;
    server service.consul service=http resolve;
}

match 200_status {
    status 200;
}

server {
    listen 80;
    server_name sd-demo.nginx-udf.internal;
    status_zone sd-demo;

    location / {
        proxy_pass http://sd_demo;
        health_check interval=2s match=200_status;
    }
}
EOF

sudo bash -c 'cat >> /etc/nginx/nginx.conf' <<EOF
stream {

    server {
    listen 9000;

    zone_sync;
    zone_sync_server master.nginx-udf.internal:9000;
    zone_sync_server plus2.nginx-udf.internal:9000;
    zone_sync_server plus3.nginx-udf.internal:9000;
    }
}
EOF




sudo bash -c 'cat > /etc/nginx/conf.d/labExample.conf' <<EOF
#####
proxy_cache_path /tmp/cache keys_zone=labCache:10m inactive=60m;
geo \$purge_allowed {
    default         0;
    10.1.1.4        1;
    10.1.1.6        1;
    127.0.0.1       1;
}

map \$request_method \$purge_method {
    PURGE \$purge_allowed;
    default 0;
}
#####

upstream f5App { 
    least_conn;
    zone f5App 64k;
    server docker.nginx-udf.internal:8080;  
    server docker.nginx-udf.internal:8081;  
    server docker.nginx-udf.internal:8082;
}

upstream nginxApp { 
    least_conn;
    zone nginxApp 64k;
    server docker.nginx-udf.internal:8083;  
    server docker.nginx-udf.internal:8084;  
    server docker.nginx-udf.internal:8085;
}

match f5_ok {
    status 200;
}

match nginx_ok {
    status 200-399;
    body !~ "maintenance mode";
}

server {
    listen 80;
    server_name  master.nginx-udf.internal  labapp.nginx-udf.internal;
    root /usr/share/nginx/html;
    error_log /var/log/nginx/LabApp.error.log info;  
    access_log /var/log/nginx/LabApp.access.log combined;
    status_zone default;
    ###
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid any 30m;
    proxy_cache labCache;
    proxy_cache_purge \$purge_method;
    ###

    location /f5/ {
        proxy_pass http://f5App/;
        health_check match=f5_ok;
    }
    location /nginx/ {
        proxy_pass http://nginxApp/;
        health_check match=nginx_ok;
    }
}
EOF


#######
sudo bash -c 'cat > /etc/nginx/conf.d/cachePurge.conf' <<EOF
map $request_method $purge_method {
        PURGE 1;
        default 0;
}
geo $purge_allowed {
    default         0;
    10.1.1.4        1;
    10.1.1.6        1;
}

map $request_method $purge_method {
    PURGE $purge_allowed;
    default 0;
}
EOF



